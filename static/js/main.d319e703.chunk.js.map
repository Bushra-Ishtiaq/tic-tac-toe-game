{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helpers.js","App.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","value","onClick","borderRadius","width","height","margin","display","gridTemplate","Board","squares","map","square","i","key","styles","btn","color","padding","Game","useState","Array","fill","board","setBoard","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","boardCopy","App","ReactDOM","render","document","getElementById"],"mappings":"oLAEA,IAAMA,EAAO,CACTC,WAAY,YACZC,OAAQ,qBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QASEC,EANA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,QAAT,OACX,4BAAQT,MAAOA,EAAOS,QAASA,GAC1BD,ICVHR,EAAQ,CACVE,OAAQ,qBACRQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAWHC,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASR,EAAZ,EAAYA,QAAZ,OACV,yBAAKT,MAAOA,GACPiB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,kBAAC,EAAD,CAAQC,IAAKD,EAAGZ,MAAOW,EAAQV,QAAS,kBAAMA,EAAQW,WCZ5DE,EAAS,CACXX,MAAO,QACPE,OAAQ,aAGNU,EAAK,CACPb,aAAc,OACdT,WAAY,WACZuB,MAAO,QACPlB,QAAS,OACTJ,OAAQ,OACRuB,QAAS,YACTpB,OAAQ,WAsCGqB,EApCF,WAAO,IAAD,EACWC,mBAASC,MAAM,GAAGC,KAAK,OADlC,mBACRC,EADQ,KACDC,EADC,OAEeJ,oBAAS,GAFxB,mBAERK,EAFQ,KAECC,EAFD,KAGTC,ECrBH,SAAyBjB,GAW5B,IAVA,IAAMkB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAf,EAAI,EAAGA,EAAIe,EAAMC,OAAQhB,IAAK,CAAC,IAAD,cACnBe,EAAMf,GADa,GAC9BiB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAItB,EAAQoB,IAAMpB,EAAQoB,KAAOpB,EAAQqB,IAAMrB,EAAQoB,KAAOpB,EAAQsB,GACpE,OAAOtB,EAAQoB,GAGnB,OAAO,KDIQG,CAAgBV,GAsB/B,OACI,oCACI,kBAAC,EAAD,CAAOb,QAASa,EAAOrB,QAtBX,SAAAW,GAChB,IAAMqB,EAAS,YAAOX,GAElBI,GAAUO,EAAUrB,KAExBqB,EAAUrB,GAAKY,EAAU,IAAM,IAC/BD,EAASU,GACTR,GAAYD,OAgBR,yBAAKhC,MAAOsB,GACR,2BAAIY,EAAS,WAAaA,EAAS,iBAAmBF,EAAU,IAAM,MAT9E,4BAAQhC,MAAOuB,EAAKd,QAAS,kBAAMsB,EAASH,MAAM,GAAGC,KAAK,SAA1D,iBEjCOa,EAFH,kBAAM,kBAAC,EAAD,OCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d319e703.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst style= {\r\n    background: 'lightblue',\r\n    border: '2px solid darkblue',\r\n    fontSize: '30px',\r\n    fontWeight: '800',\r\n    cursor: 'pointer',\r\n    outline: 'none'\r\n\r\n}\r\nconst Square = ({value, onClick}) => (\r\n    <button style={style} onClick={onClick}>\r\n        {value}\r\n    </button>\r\n);\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst style = {\r\n    border: '4px solid darkblue',\r\n    borderRadius: '10px',\r\n    width: '250px',\r\n    height: '250px',\r\n    margin: '0 auto',\r\n    display: 'grid',\r\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\r\n};\r\n\r\nconst Board = ({ squares, onClick }) => (\r\n    <div style={style}>\r\n        {squares.map((square, i) => (\r\n            <Square key={i} value={square} onClick={() => onClick(i)} />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default Board;","import React, { useState } from 'react';\r\nimport { calculateWinner } from '../helpers';\r\nimport Board from './Board';\r\n\r\nconst styles = {\r\n    width: '200px',\r\n    margin: '20px auto',\r\n};\r\n\r\nconst btn ={\r\n    borderRadius: '10px',\r\n    background: 'darkblue',\r\n    color: 'white',\r\n    outline: 'none',\r\n    border: 'none',\r\n    padding: '12px 20px',\r\n    cursor: 'pointer',\r\n}\r\nconst Game = () => {\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    const winner = calculateWinner(board);\r\n\r\n    const handleClick = i => {\r\n        const boardCopy = [...board];\r\n        // If user click an occupied square or if game is won, return\r\n        if (winner || boardCopy[i]) return;\r\n        // Put an X or an O in the clicked square\r\n        boardCopy[i] = xIsNext ? 'X' : 'O';\r\n        setBoard(boardCopy);\r\n        setXisNext(!xIsNext);\r\n    }\r\n\r\n    const jumpTo = () => {\r\n\r\n    }\r\n\r\n    const renderMoves = () => (\r\n        <button style={btn} onClick={() => setBoard(Array(9).fill(null))}>\r\n            Start Game\r\n        </button>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <Board squares={board} onClick={handleClick} />\r\n            <div style={styles}>\r\n                <p>{winner ? 'Winner: ' + winner : 'Next Player: ' + (xIsNext ? 'X' : 'O')}</p>\r\n                {renderMoves()}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Game;","export function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }","import React from 'react';\nimport Game from './components/Game';\n\nconst App = () => <Game />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}